<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>loading</title>
</head>

<body style="display: flex;">
    <canvas id="canvas" width="400" height="400"></canvas>
</body>
<script type="text/javascript">

    let canvas = document.querySelector('#canvas'),
        context = canvas.getContext('2d');
    let length = 10, fillColor = '#000', vertices = 6, size = 100;
    canvas.width = size;
    canvas.height = size;
    function getDegree(vertices, index) {
        return 360 / vertices * (index + 0.5) + 90;
    }
    function getRadian(degree) {
        return degree * Math.PI / 180;
    };
    function draw1() {
        // 左上角
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x - 10, y - 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#141E30"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw2() {
        // 右上角
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x + 10, y - 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#F0742B"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw3() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x + 20, y);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#141E30"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw4() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x + 10, y + 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#F0742B"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw5() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x - 10, y + 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#141E30"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw6() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x - 20, y);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#F0742B"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw7() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x, y);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#D3D3D3"
            context.strokeStyle = "#FFFFFF"
            context.fill()

        }
    }
    function draw8() {
        // 左上角
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x - 10, y - 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw9() {
        // 右上角
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x + 10, y - 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw10() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x + 20, y);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw11() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x + 10, y + 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw12() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x - 10, y + 17);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw13() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x - 20, y);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()
        }
    }
    function draw14() {
        for (var j = 0; j < 7; j++) {
            context.beginPath();
            for (var i = 0; i < vertices; i++) {
                // 计算偏转
                var degree = getDegree(vertices, i) + 90,
                    radian = getRadian(degree);
                // 增加1/3的canvas大小位移量以免被边缘挡住
                var x = Math.cos(radian) * length + size / 3;
                var y = Math.sin(radian) * length + size / 3;
                context.lineTo(x, y);
            }
            context.closePath();
            context.stroke();
            context.fillStyle = "#FFFFFF"
            context.strokeStyle = "#FFFFFF"
            context.fill()

        }
    }

    draw = [draw1, draw2, draw3, draw4, draw5, draw6, draw7, draw8, draw9, draw10, draw11, draw12, draw13, draw14]
    for (let i = 0; i < 14; i++) {
        setTimeout(() => {
            draw[i]()
        }, i * 100);
        setInterval(() => {
            setTimeout(() => {
            draw[i]()
        }, i * 100);
        },90*14);
    }
</script>

</html>
